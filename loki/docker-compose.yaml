x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://loki:3100/loki/api/v1/push"
      loki-pipeline-stages: |
        - labels:
            job: "{{.Name}}"
services:

  # fluentd:
  #   build:
  #     context: ./fluentd
  #     dockerfile: Dockerfile
  #   container_name: fluentd
  #   ports:
  #     - "9292:9292"
  #     - "24220:24220"
  #     - "24224:24224"  # Fluentd in/out port
  #     - "24224:24224/udp"
  #   volumes:
  #     - ./fluentd/fluentd.conf:/fluentd/etc/fluentd.conf
  #   restart: always
  #   environment:
  #     - FLUENTD_CONF=fluentd.conf
  #   networks:
  #     - loki-logs
   
  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-data:/etc/loki
    command: ["--config.file=/etc/loki/config.yaml"]
    networks:
      - loki_logs
      
  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    user: '0'
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    depends_on:
      - loki
    <<: *logging
    networks:
      - loki_logs

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: server
    restart: always
    ports:
      - "8000"
    networks:
      - loki_logs

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: client
    environment:
      ADDR: http://server:8000
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      server:
        condition: service_started
    networks:
      - loki_logs

networks:
  loki_logs:
